esphome:
  name: esphome-web-32s3
  friendly_name: esphome-web-32s3

esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: arduino

# Enable logging
logger:

ota:
  password: "cb63cf11adef9ad284c02033212ac68c"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esphome-Web-32S3"
    password: "qq4Q8emK58E3"

captive_portal:

api:
  encryption:
    key: "td4rkNzmqIa3aIjXWkLC83GoSvWKTHKXvA1c3glQc40="
  services:
    - service: stepper_stop
      then:
        - stepper.set_target:
            id: vinyl_stepper
            target: !lambda 'return id(vinyl_stepper).current_position;'

    - service: stepper_start
      then:
        - stepper.set_target:
            id: vinyl_stepper
            target: !lambda 'return id(vinyl_stepper).current_position + 17280000;'
    
stepper:
  - platform: uln2003
    id: vinyl_stepper
    pin_a: GPIO1
    pin_b: GPIO2
    pin_c: GPIO4
    pin_d: GPIO5
    max_speed: 500 steps/s
    sleep_when_done: true

i2c:
  sda: GPIO35
  scl: GPIO36

pn532_i2c:
  id: pn532_tag_id
  on_tag:
    then:
      - homeassistant.tag_scanned: !lambda |
          if (!tag.has_ndef_message()) {
            return x;
          }
          auto message = tag.get_ndef_message();
          auto records = message->get_records();
          for (auto &record : records) {
            std::string payload = record->get_payload();
            size_t pos = payload.find("https://www.home-assistant.io/tag/");
          }
          return x;

switch:
  - platform: gpio
    name: "Stepper Stop"
    id: stepper_stop
    pin: 0
